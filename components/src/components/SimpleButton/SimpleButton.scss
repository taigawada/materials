@use 'globalStyleSheet' as *;
.simple_button__container {
    display: inline;
    color: #2c3e50;
    padding: 0 $space-1;
    box-sizing: border-box;
}
.simple_button__base_prime {
    position: relative;
    border-radius: calc(var(--props-size) * 2);
    background: $primary-base;
    text-decoration: none;
    padding-top: var(--props-size);
    padding-bottom: var(--props-size);
    box-shadow: $box-shadow-1;
}
.simple_button__text_prime {
    font-size: $font-size-6;
    padding: $space-4 $space-4;
    color: $text-white;
    text-decoration: none;
    pointer-events: none;
}
.simple_button__text_prime[fill='true'] {
    padding: $space-4 calc(50% - $font-size-6 * var(--slot-text-length));
}
.simple_button__base_normal {
    color: $normal;
    background: $surface;
    border-radius: calc(var(--props-size) * 2);
    text-decoration: none;
    padding-top: var(--props-size);
    padding-bottom: var(--props-size);
    box-shadow: $box-shadow-1;
    cursor: pointer;
}
.simple_button__text_normal {
    font-size: $font-size-6;
    padding: $space-4 $space-4;
    color: $text;
    text-decoration: none;
    pointer-events: none;
}
.simple_button__text_normal[fill='true'] {
    padding: $space-4 calc(50% - $font-size-6 * var(--slot-text-length));
}
.simple_button__base_plain {
    cursor: pointer;
    color: $plain;
    font-size: calc(var(--props-size) * 1.5);
    text-decoration: none;
}
.simple_button__entered_prime {
    cursor: pointer;
    text-decoration: none;
    background: $primary-hovered;
}
.simple_button__entered_normal {
    cursor: pointer;
    text-decoration: none;
    background: $normal-pressed;
}
.simple_button__entered_plain {
    cursor: pointer;
    text-decoration: none;
    color: $plain-hovered;
}
.simple_button__disable_prime {
    position: relative;
    background: $primary-disabled;
    pointer-events: none;
    border-radius: calc(var(--props-size) * 2);
    text-decoration: none;
    padding-top: var(--props-size);
    padding-bottom: var(--props-size);
    box-shadow: $box-shadow-1;
}
.simple_button__disable_normal {
    position: relative;
    background: $normal-disabled;
    pointer-events: none;
    border-radius: calc(var(--props-size) * 2);
    text-decoration: none;
    padding-top: var(--props-size);
    padding-bottom: var(--props-size);
    box-shadow: $box-shadow-1;
}
.simple_button__disable_plain {
    color: $plain-disabled;
    pointer-events: none;
}
.simple_button__disabled_text {
    padding: $space-4 $space-4;
    color: $text;
    text-decoration: none;
    pointer-events: none;
}
.simple_button__disabled_text[fill='true'] {
    padding: $space-4 calc(50% - $font-size-6 * var(--slot-text-length));
}
.simple_button__disabled_text_primary {
    color: $surface;
}
.simple_button__text_loading {
    opacity: 0;
    padding: $space-4 $space-4;
    color: $text-white;
    text-decoration: none;
    pointer-events: none;
}
.simple_button__text_loading[fill='true'] {
    padding: $space-4 calc(50% - $font-size-6 * var(--slot-text-length));
}
.simple_button__spinner {
    position: absolute;
    pointer-events: none;
    left: 50%;
    top: 57%;
    transform: translate(-50%, -50%);
}
